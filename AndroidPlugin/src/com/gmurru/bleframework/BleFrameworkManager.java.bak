package com.gmurru.bleframework;

import android.content.Intent;
import android.app.Activity;
import android.util.Log;
import android.content.Context;

import com.unity3d.player.UnityPlayer;

public class BleFrameworkManager
{

	/*
    Definition of the BLE Unity message methods used to communicate back with Unity. 
    */
    public static final String BLEUnityMessageName_OnBleDidInitialize = "OnBleDidInitialize";

	private Intent _bleFrameworkIntent;
    private static final String TAG = BleFrameworkManager.class.getSimpleName();


    private Context _context;
	/*
    Singleton instance.
    */
    private static volatile BleFrameworkManager _instance;
    
    /*
    Singleton initialization. Create an instance of BleFramework class only if it doesn't exist yet.
    */
    
    public static BleFrameworkManager getInstance()
    {
    	return _instance;
    }

    public static BleFrameworkManager getInstance(Context context) 
    {
        if (_instance == null ) 
        {
            synchronized (BleFrameworkManager.class) 
            {
                if (_instance == null) 
                {
                    Log.d(TAG, "BleFrameworkManager: Creation of _instance");
                    _instance = new BleFrameworkManager(context);
                }
            }
        }

        return _instance;
    }
    
    public BleFrameworkManager(Context context)
    {
    	this._context = context;
    }

	public void launchActivity(Activity root) 
	{
		if (_bleFrameworkIntent == null)
		{
			UnityPlayer.UnitySendMessage("BLEControllerEventHandler", BLEUnityMessageName_OnBleDidInitialize, "Success");
			
			Log.d(TAG, "launchActivity: creating BleFramework intent");
	    	_bleFrameworkIntent = new Intent(root, BleFramework.class);
	    	Log.d(TAG, "launchActivity: starting BleFramework activity");
	    	root.startActivity(_bleFrameworkIntent);

	    }
	}

	public void SendBLEUnityMessageName_OnBleDidInitializeMessage(String message)
	{
		Log.d(TAG, "SendBLEUnityMessageName_OnBleDidInitializeMessage:");
		//UnityPlayer.UnitySendMessage("BLEControllerEventHandler", BLEUnityMessageName_OnBleDidInitialize, message);
	}
}